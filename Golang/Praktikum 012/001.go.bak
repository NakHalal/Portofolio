package main

import (
	"fmt"
	"math"
)

const NMAX = 100

type Provinsi struct {
	nama     string
	populasi int
	tumbuh   float64
}

type DataProvinsi struct {
	tabel     [NMAX]Provinsi
	nProvinsi int
}

func main() {
	var TK Provinsi
	TK.nama = "X"
	var Tab DataProvinsi

	for i := 0; TK.nama != "NONE" || TK.populasi != 0 || TK.tumbuh != 0.0; i++ {
		fmt.Scan(&TK.nama, &TK.populasi, &TK.tumbuh)
		Tab.tabel[i] = TK
		Tab.nProvinsi = i
	}

	var NP string
	fmt.Print("Nama Provinsi? ")
	fmt.Scan(&NP)

	TK = cariProvinsi(Tab, NP)
	fmt.Print(TK.nama, " ", TK.populasi, " ", TK.tumbuh, "\n")

	fmt.Print("Prediksi populasi tahun depan provinsi? ")
	fmt.Scan(&NP)

	fmt.Print("Populasi Provinsi Bali tahun depan: ", prediksi(Tab, NP), "\n")

	urutData(&Tab)
	fmt.Print("Urutan data pertumbuhan provinsi berdasarkan populasi terurut menurun: \n")
	for M := 0; M < Tab.nProvinsi; M++ {
		fmt.Print(Tab.tabel[M].nama, " ", Tab.tabel[M].populasi, " ", Tab.tabel[M].tumbuh, "\n")
	}
}

func cariProvinsi(data DataProvinsi, nama string) Provinsi {
	//{Terdefinisi data yang sudah terisi dan nama provinsi yang dicari. Fungsi melakukan sequential search dan mengembalikan Provinsi dengan nama yang sesuai}
	var idx int = -1
	var i int = 0
	for i < data.nProvinsi {
		if nama == data.tabel[i].nama {
			idx = i
		}
		i++
	}
	return data.tabel[idx]
}

func prediksi(data DataProvinsi, nama string) int {
	//{Terdefinisi data yang sudah terisi dan nama provinsi yang diprediksi. Fungsi menghitung prediksi populasi tahun berikutnya dan mengembalikannya}
	var TK Provinsi = cariProvinsi(data, nama)
	return int(math.Ceil((float64(TK.populasi)*float64(TK.tumbuh) + float64(TK.populasi))))
}

func urutData(data *DataProvinsi) {
	//{I.S. Terdefinisi data yang sudah terisi
	//Proses: mengurutkan data berdasarkan populasi descending dengan selection sort/insertion sort
	//F.S. data sudah terurut}

	//var n = len(data)
	for i := 1; i < data.nProvinsi; i++ {
		j := i
		for j > 0 {
			if data.tabel[j-1].populasi < data.tabel[j].populasi {
				data.tabel[j-1], data.tabel[j] = data.tabel[j], data.tabel[j-1]
			}
			j = j - 1
		}
	}
}

/*
program DataPertumbuhan
kamus
constant NMAX : integer = 100
type Provinsi : <
nama : string,
populasi : integer,
tumbuh : real
>
type DataProvinsi : <
tabel : array [1..NMAX] of Provinsi
nProvinsi : integer {banyaknya elemen dalam array}
>

function cariProvinsi(data : DataProvinsi, nama : string) → Provinsi
{Terdefinisi data yang sudah terisi dan nama provinsi yang dicari. Fungsi melakukan sequential search dan mengembalikan Provinsi dengan nama yang sesuai}

function prediksi(data : DataProvinsi, nama : string) → integer
{Terdefinisi data yang sudah terisi dan nama provinsi yang diprediksi. Fungsi menghitung prediksi populasi tahun berikutnya dan mengembalikannya}

procedure urutData(in/out data : DataProvinsi)
{I.S. Terdefinisi data yang sudah terisi
Proses: mengurutkan data berdasarkan populasi descending dengan selection sort/insertion sort
F.S. data sudah terurut}
*/
